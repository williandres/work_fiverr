if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
####
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
# Extraer Importe (último número)
importe_match <- gregexpr("\\b\\d[\\d,.]*\\b", descripcion)[[1]]
print(importe_match)
importe <- as.numeric(sub(".*\\b(\\d[\\d,.]*)\\b", "\\1", descripcion[max(importe_match)]))
# Extraer P.Unit (primer número)
p_unit <- as.numeric(sub(".*\\b(\\d[\\d,.]*)\\b", "\\1", descripcion[min(importe_match)]))
####
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", de)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
print(numeros)
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
numeros_coma <- regmatches(cadena, gregexpr("\\b\\d+,[0-9]+\\b", descripcion))[[1]]
print(numeros_coma)
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
numeros_coma <- regmatches(descripcion, gregexpr("\\b\\d+,[0-9]+\\b", descripcion))[[1]]
print(numeros_coma)
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
numeros_coma <- regmatches(descripcion, gregexpr("\\b\\d+,[0-9]+\\b", descripcion))[[1]]
print(numeros_coma[1])
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- as.numeric(regmatches(descripcion, regexpr("\\b\\d+[,.]?\\d*\\b", descripcion)))
numeros_coma <- regmatches(descripcion, gregexpr("\\b\\d+,[0-9]+\\b", descripcion))[[1]]
print(numeros_coma[2])
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
# Leer el archivo de texto
lineas <- readLines("prueba/20240108 Mercadona 83,73 €.txt", encoding = "latin1")
# Convertir caracteres a UTF-8
lineas <- lapply(lineas, function(x) iconv(x, from = "latin1", to = "UTF-8"))
# Encontrar la línea que contiene "Descripción P. Unit Importe"
inicio_datos_idx <- which(grepl("Descripción P. Unit Importe", lineas))
if (length(inicio_datos_idx) > 0) {
inicio_datos <- inicio_datos_idx[1] + 1
} else {
stop("No se encontró la línea 'Descripción P. Unit Importe' en el archivo de texto.")
}
# Encontrar la línea que contiene "TOTAL"
fin_datos_idx <- which(grepl("TOTAL", lineas))
if (length(fin_datos_idx) > 0) {
fin_datos <- fin_datos_idx[1] - 1
} else {
stop("No se encontró la línea 'TOTAL' en el archivo de texto.")
}
# Extraer las líneas de datos
datos <- lineas[inicio_datos:fin_datos]
###
datos_separados <- lapply(datos, function(x) {
# Extraer Cantidad (primer número)
cantidad <- as.numeric(sub("\\D*(\\d+).*", "\\1", x))
# Extraer Descripcion (resto de la cadena)
descripcion <- gsub("^\\d+([,.]?\\d*)?\\s*", "", x)  # Eliminar números al principio de la cadena
descripcion <- gsub("\\s+$", "", descripcion)         # Eliminar espacios en blanco al final de la cadena
############
# Extraer Descripcion (resto de la cadena)
descripcion <- sub("^\\d+([,.]?\\d*)?\\s*", "", descripcion)
print(descripcion)
# Extraer los números de la descripción
numeros <- regmatches(descripcion, gregexpr("\\b\\d+,[0-9]+\\b", descripcion))[[1]]
# Tomar el primer número como P.Unit y el último como Importe
p_unit <- ifelse(length(numeros) > 1, numeros[1], NA)
importe <- tail(numeros, 1)
# Crear vector con los resultados
resultado <- c(descripcion, p_unit, importe)
##########
descripcion <- gsub("[0-9,%]", "", descripcion)
# Crear vector con los resultados
c(cantidad, descripcion, p_unit, importe)
})
# Crear el data frame
df <- as.data.frame(do.call(rbind, datos_separados), stringsAsFactors = FALSE)
colnames(df) <- c("Cantidad", "Descripcion", "P.Unit", "Importe")
print(df)
# Imprimir el data frame
